 /*
 * Copyright (c) 2025 idesignstuff
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <input/processors.dtsi>
#include <dt-bindings/zmk/input_transform.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/pointing.h>

// layer defines
#define DEFAULT 0
#define NAV     1
#define SYM     2

 / {
     glidepoint_listener {
        compatible = "zmk,input-listener";
        device = <&glidepoint>;
        input-processors = 
        <&zip_xy_transform (INPUT_TRANSFORM_XY_SWAP |INPUT_TRANSFORM_X_INVERT | INPUT_TRANSFORM_Y_INVERT)>,
        <&zip_temp_layer 4 1000>;
     }; //end glidepoint
/* commenting out scroller function until it's understood
      scroller {
        layers = <SCROLL>;
        input-processors =
            <&zip_xy_to_scroll_mapper>,
            <&zip_scroll_transform (INPUT_TRANSFORM_XY_SWAP | INPUT_TRANSFORM_Y_INVERT)>,
            <&zip_scroll_scaler 1 6>;
    }; // end scroller
*/
   }; // end cirque listener group

/ {
    behaviors {
        // Home row mod tap settings
        /* hrm: home_row_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_ROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        }; // end home row mod tap settings*/

        pht: positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "POSITIONAL_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <400>;
            quick-tap-ms = <200>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <1>;    // <---[[the W key]]
            }; //end positional hold tap

       rpi: require_prior_idle {
         compatible = "zmk,behavior-hold-tap";
         #binding-cells = <2>;
         flavor = "tap-preferred";
         tapping-term-ms = <200>;
         quick-tap-ms = <200>;
         require-prior-idle-ms = <80>;
         bindings = <&kp>, <&kp>;
         }; //end require prior idle
    }; // end behaviors
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_grave {
            bindings = <&kp GRAVE>;
            key-positions = <0 1>;
            require-prior-idle-ms = <100>;
            layers = <0>;
        };

        combo_capslock {
            bindings = <&caps_word>;
            key-positions = <23 26>;
            require-prior-idle-ms = <100>;
            layers = <0>;
        };

        combo_hyphen {
            bindings = <&kp MINUS>;
            key-positions = <8 9>;
            require-prior-idle-ms = <100>;
            layers = <0>;
        };

        combo_equals {
            bindings = <&kp EQUAL>;
            key-positions = <18 19>;
            require-prior-idle-ms = <100>;
            layers = <0>;
        };

        combo_backslash {
            bindings = <&kp BSLH>;
            key-positions = <38 39>;
            require-prior-idle-ms = <100>;
            layers = <0>;
        };

        open_par {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <43 44>;
            require-prior-idle-ms = <100>;
        };

        close_par {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <45 46>;
            require-prior-idle-ms = <100>;
        };

        open_brkt {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <42 43>;
            require-prior-idle-ms = <100>;
        };

        close_brkt {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <46 47>;
            require-prior-idle-ms = <100>;
        };

        mmb_combo {
            bindings = <&mkp MB3>;
            key-positions = <35 36>;
            require-prior-idle-ms = <250>;
        };

    };
};

/ {
    macros {
       // Your macros here ;)
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <   
//               ╭──────────────┬──────────────┬──────────────┬──────────────╮                                     ╭──────────────┬──────────────┬──────────────┬─────────────╮
                       &kp B          &kp Y         &kp O          &kp U                                                 &kp L          &kp D          &kp W         &kp V
//╭──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤                                     ├──────────────┼──────────────┼──────────────┼──────────────┼────────────────╮
     &kp LSHFT          &kp C          &kp I         &kp E         &kp A                                                 &kp H          &kp T          &kp S          &kp N       &kp BSPC 
//├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤                                     ├──────────────┼──────────────┼──────────────┼──────────────┼────────────────┤ 
     &kp LCTRL         &kp G           &kp X         &kp J          &kp K                                                &kp R          &kp M          &kp F          &kp P          &kp Q
//╰──────────────┴──────────────┴──────────────┼──────────────┼──────────────┼─────────────────╮ ╭─────────────────┼──────────────┼──────────────┼──────────────┴──────────────┴────────────────╯ 
                                                     &mkp 2        &mkp 1          &lt 1 TAB          &lt 2 SPACE      &kp RET         &kp Z
//                                             ╰──────────────┴──────────────┴─────────────────╯ ╰─────────────────┴──────────────┴──────────────╯
            >;
        }; // end default layer
        
        nav_layer {
            bindings = <
//               ╭──────────────┬──────────────┬──────────────┬──────────────╮                                     ╭──────────────┬──────────────┬──────────────┬─────────────╮
                     &kp PG_UP       &kp HOME       &kp UP        &kp END                                               &kp N7          &kp N8          &kp N9       &kp PLUS
//╭──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤                                     ├──────────────┼──────────────┼──────────────┼──────────────┼────────────────╮
       &trans        &kp PG_DN      &kp LEFT      &kp DOWN       &kp RIGHT                                             &kp N4          &kp N5          &kp N6       &kp MINUS       &trans
//├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤                                     ├──────────────┼──────────────┼──────────────┼──────────────┼────────────────┤ 
       &trans          &none           &none         &none          &none                                               &kp N1          &kp N2          &kp N3       &kp FSLH        &kp ASTRK
//╰──────────────┴──────────────┴──────────────┼──────────────┼──────────────┼─────────────────╮ ╭─────────────────┼──────────────┼──────────────┼──────────────┴──────────────┴────────────────╯ 
                                                     &trans         &trans          &trans            &kp N0           &kp DOT      &kp EQUAL
//                                             ╰──────────────┴──────────────┴─────────────────╯ ╰─────────────────┴──────────────┴──────────────╯
            >;
        }; // end nav layer

        sym_layer {
            bindings = <
//               ╭──────────────┬──────────────┬──────────────┬──────────────╮                                     ╭──────────────┬──────────────┬──────────────┬─────────────╮
                       &none          &none        &kp SEMI       &kp DQT                                              &kp QMARK      &kp COMMA       &none       &bt BT_CLR
//╭──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤                                     ├──────────────┼──────────────┼──────────────┼──────────────┼────────────────╮
     &soft_off         &none          &none        &kp COLON      &kp APOS                                              &kp DOT       &kp LPAR        &kp RPAR    &bt BT_SEL 0    &studio_unlock
//├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤                                     ├──────────────┼──────────────┼──────────────┼──────────────┼────────────────┤ 
     &out OUT_TOG      &none          &kp LT       &kp GT         &kp BSLH                                             &kp EXCL       &kp LBKT        &kp RBKT     &bt BT_SEL 1    &bootloader
//╰──────────────┴──────────────┴──────────────┼──────────────┼──────────────┼─────────────────╮ ╭─────────────────┼──────────────┼──────────────┼──────────────┴──────────────┴────────────────╯ 
                                                 &kp LG(PSCRN)     &kp DEL          &trans              &trans          &trans        &trans
//                                             ╰──────────────┴──────────────┴─────────────────╯ ╰─────────────────┴──────────────┴──────────────╯
            >;
        }; // end symbols layer


        extra1 {
            status = "reserved";
        };

        extra2 {
            status = "reserved";
        };

    }; // end keymap

 }; // top node end
